0-0:  1026681 c
1-0:  39828 c
2-0:  701993 c
3-0:  718452 c
4-0:  911248 c
5-0:  466916 c
6-0:  159727 c
7-0:  512290 c
8-0:  703987 c
9-0:  364550 c
99:565454 + 483163 = 41 dist
99:180009 + 869034 = 467 dist
99:173183 + 875727 = 334 dist
99:935905 + 113171 = 500 dist
99:854598 + 194147 = 169 dist
99:726137 + 323163 = 724 dist
99:1002285 + 46769 = 478 dist
99:37843 + 1011091 = 358 dist
99:627500 + 422038 = 962 dist
99:659699 + 389341 = 464 dist
705:255252 + 794029 = 705 dist
145:961428 + 87293 = 145 dist
281:860930 + 187927 = 281 dist
827:970898 + 78505 = 827 dist
961:874222 + 175315 = 961 dist
491:762925 + 286142 = 491 dist
995:615413 + 434158 = 995 dist
942:886663 + 162855 = 942 dist
827:338564 + 710839 = 827 dist
436:864463 + 184549 = 436 dist
435:419601 + 629366 = 391 dist
435:812240 + 236940 = 604 dist
435:786329 + 263149 = 902 dist
435:479336 + 569393 = 153 dist
435:1030971 + 17897 = 292 dist
435:973739 + 75219 = 382 dist
435:772867 + 276130 = 421 dist
435:765741 + 283551 = 716 dist
435:19700 + 1029594 = 718 dist
435:1034610 + 14861 = 895 dist
447:614483 + 434540 = 447 dist
726:584840 + 464462 = 726 dist
771:668536 + 380811 = 771 dist
538:581204 + 467910 = 538 dist
869:646314 + 403131 = 869 dist
912:819149 + 230339 = 912 dist
667:31783 + 1017460 = 667 dist
299:378739 + 670136 = 299 dist
35:286246 + 762365 = 35 dist
894:816128 + 233342 = 894 dist
0: slt= 11    B
0: slt= 01    A
0: final= 1 vs 0 
--------------
1: slt= 11    B
1: slt= 01    A
1: final= 1 vs 0 
--------------
2: slt= 11    B
2: slt= 01    A
2: final= 1 vs 0 
--------------
3: slt= 11    B
3: slt= 10    A
3: final= 0 vs 1 
--------------
4: slt= 11    B
4: slt= 10    A
4: final= 0 vs 1 
--------------
0: slt= 11    B
0: slt= 10    A
0: final= 0 vs 1 
--------------
1: slt= 11    B
1: slt= 01    A
1: final= 1 vs 0 
--------------
2: slt= 00    B
2: slt= 01    A
2: final= 0 vs 1 
--------------
3: slt= 00    B
3: slt= 01    A
3: final= 0 vs 1 
--------------
4: slt= 00    B
4: slt= 01    A
4: final= 0 vs 1 
--------------
0: slt= 00    B
0: slt= 10    A
0: final= 1 vs 0 
--------------
1: slt= 11    B
1: slt= 10    A
1: final= 0 vs 1 
--------------
2: slt= 11    B
2: slt= 01    A
2: final= 1 vs 0 
--------------
3: slt= 00    B
3: slt= 10    A
3: final= 1 vs 0 
--------------
4: slt= 00    B
4: slt= 10    A
4: final= 1 vs 0 
--------------
0: slt= 11    B
0: slt= 01    A
0: final= 1 vs 0 
--------------
1: slt= 00    B
1: slt= 01    A
1: final= 0 vs 1 
--------------
2: slt= 11    B
2: slt= 01    A
2: final= 1 vs 0 
--------------
3: slt= 00    B
3: slt= 01    A
3: final= 0 vs 1 
--------------
4: slt= 00    B
1111111111111100000000111100001100110000    allBitVecs A
1111111111 vs 1100110000    bitGcMinOutVecs[] A
4: slt= 10    A
4: final= 1 vs 0 
--------------
0101011010100101010110100110100101010110    allBitVecs B
0101011010 vs 0101010110    bitGcMinOutVecs[] B
0-0:  165608 vs 380545 	 648730 	 399846 c= 268185 s
0-1:  838954 vs 300561 	 658945 	 389631 c= 358384 s
0-2:  431586 vs 468204 	 258403 	 790173 c= 838775 s
0-3:  712308 vs 606935 	 824979 	 223597 c= 218044 s
0-4:  277233 vs 536820 	 471211 	 577365 c= 982967 s
0-5:  609081 vs 240859 	 931520 	 117056 c= 690661 s
0-6:  534817 vs 181604 	 581108 	 467468 c= 399504 s
0-7:  766970 vs 682347 	 729127 	 319449 c= 46780 s
0-8:  186680 vs 412809 	 607756 	 440820 c= 194947 s
0-9:  981716 vs 103346 	 322017 	 726559 c= 218671 s
1-0:  722229 vs 441410 	 466977 	 581599 c= 25567 s
1-1:  549044 vs 893654 	 636192 	 412384 c= 791114 s
1-2:  447393 vs 19208 	 635039 	 413537 c= 615831 s
1-3:  1045647 vs 377568 	 74749 	 973827 c= 745757 s
1-4:  192572 vs 433272 	 18218 	 856004 c= 633522 s
1-5:  843603 vs 462047 	 557952 	 204973 c= 95905 s
1-6:  29134 vs 225101 	 644547 	 1019442 c= 419446 s
1-7:  324496 vs 550252 	 162583 	 724080 c= 660907 s
1-8:  261829 vs 1044202 	 600393 	 786747 c= 604767 s
1-9:  733213 vs 21972 	 549100 	 315363 c= 527128 s
2-0:  560191 vs 890279 	 979792 	 488385 c= 89513 s
2-1:  565548 vs 447421 	 329212 	 483028 c= 930367 s
2-2:  722499 vs 567987 	 984746 	 63830 c= 416759 s
2-3:  432835 vs 849492 	 1002075 	 46501 c= 152583 s
2-4:  493871 vs 981816 	 511476 	 537100 c= 578236 s
2-5:  772653 vs 721987 	 847490 	 201086 c= 125503 s
2-6:  5245 vs 465390 	 778112 	 1043331 c= 312722 s
2-7:  193865 vs 153698 	 959606 	 854711 c= 805908 s
2-8:  869394 vs 241535 	 889094 	 179182 c= 647559 s
2-9:  782238 vs 477561 	 768272 	 266338 c= 290711 s
3-0:  92020 vs 992394 	 526113 	 522463 c= 582295 s
3-1:  436413 vs 184298 	 900149 	 148427 c= 715851 s
3-2:  399736 vs 520465 	 19696 	 648840 c= 547807 s
3-3:  200271 vs 100791 	 781475 	 848305 c= 680684 s
3-4:  223878 vs 647634 	 626140 	 422436 c= 1027082 s
3-5:  595713 vs 223565 	 825140 	 223436 c= 601575 s
3-6:  34390 vs 175273 	 66173 	 1014186 c= 939476 s
3-7:  726489 vs 940913 	 56652 	 322087 c= 164315 s
3-8:  977495 vs 508918 	 215165 	 71081 c= 754823 s
3-9:  590454 vs 240878 	 358006 	 458122 c= 117128 s
1111111111111100000000111100001100110000    allBitVecs B
1111111111 vs 1100110000    bitGcMinOutVecs[] B
0-0:  165608 vs 0 c= 0 r
0-1:  658945 vs 1 c= 358384 r
0-2:  431586 vs 0 c= 358384 r
0-3:  824979 vs 1 c= 218044 r
0-4:  277233 vs 0 c= 218044 r
0-5:  931520 vs 1 c= 690661 r
0-6:  581108 vs 1 c= 399504 r
0-7:  766970 vs 0 c= 399504 r
0-8:  607756 vs 1 c= 194947 r
0-9:  981716 vs 0 c= 194947 r
1-0:  466977 vs 1 c= 25567 r
1-1:  549044 vs 0 c= 25567 r
1-2:  447393 vs 0 c= 25567 r
1-3:  74749 vs 1 c= 745757 r
1-4:  192572 vs 0 c= 745757 r
1-5:  557952 vs 1 c= 95905 r
1-6:  29134 vs 0 c= 95905 r
1-7:  162583 vs 1 c= 660907 r
1-8:  261829 vs 0 c= 660907 r
1-9:  549100 vs 1 c= 527128 r
2-0:  979792 vs 1 c= 89513 r
2-1:  565548 vs 0 c= 89513 r
2-2:  984746 vs 1 c= 416759 r
2-3:  432835 vs 0 c= 416759 r
2-4:  493871 vs 0 c= 416759 r
2-5:  847490 vs 1 c= 125503 r
2-6:  778112 vs 1 c= 312722 r
2-7:  193865 vs 0 c= 312722 r
2-8:  889094 vs 1 c= 647559 r
2-9:  782238 vs 0 c= 647559 r
3-0:  92020 vs 0 c= 647559 r
3-1:  900149 vs 1 c= 715851 r
3-2:  399736 vs 0 c= 715851 r
3-3:  781475 vs 1 c= 680684 r
3-4:  223878 vs 0 c= 680684 r
3-5:  825140 vs 1 c= 601575 r
3-6:  34390 vs 0 c= 601575 r
3-7:  56652 vs 1 c= 164315 r
3-8:  215165 vs 1 c= 754823 r
3-9:  590454 vs 0 c= 754823 r
0101011010100101010110100110100101010110    allBitVecs A
0101011010 vs 0101010110    bitGcMinOutVecs[] A
0-0:  673140 vs 814974 	 107727 	 375436 c= 341329 s
0-1:  687804 vs 941457 	 867346 	 181230 c= 974465 s
0-2:  193433 vs 518047 	 20584 	 855143 c= 551113 s
0-3:  547517 vs 669135 	 434346 	 614230 c= 813787 s
0-4:  334443 vs 554490 	 528590 	 714133 c= 1022676 s
0-5:  1017408 vs 756003 	 694245 	 354331 c= 986818 s
0-6:  465991 vs 913061 	 419222 	 629354 c= 554737 s
0-7:  569931 vs 160158 	 532446 	 478645 c= 372288 s
0-8:  432507 vs 925988 	 10469 	 1038107 c= 133057 s
0-9:  435174 vs 763945 	 824515 	 613402 c= 60570 s
1-0:  276249 vs 138886 	 530796 	 517780 c= 391910 s
1-1:  616858 vs 152881 	 704151 	 431718 c= 551270 s
1-2:  648745 vs 821943 	 836672 	 399831 c= 14729 s
1-3:  392978 vs 375079 	 314473 	 734103 c= 987970 s
1-4:  310529 vs 142638 	 485844 	 738047 c= 343206 s
1-5:  174073 vs 600459 	 936507 	 112069 c= 336048 s
1-6:  254721 vs 659511 	 688879 	 793855 c= 29368 s
1-7:  647405 vs 385626 	 484550 	 564026 c= 98924 s
1-8:  989471 vs 725491 	 651734 	 59105 c= 974819 s
1-9:  468402 vs 550608 	 283853 	 764723 c= 781821 s
2-0:  131685 vs 846666 	 550895 	 497681 c= 752805 s
2-1:  120302 vs 570327 	 357242 	 928274 c= 835491 s
2-2:  937730 vs 63292 	 674581 	 373995 c= 611289 s
2-3:  566952 vs 700320 	 87769 	 481624 c= 436025 s
2-4:  180293 vs 61466 	 198190 	 868283 c= 136724 s
2-5:  959 vs 195960 	 974316 	 74260 c= 778356 s
2-6:  758691 vs 276405 	 482561 	 566015 c= 206156 s
2-7:  215174 vs 742770 	 498725 	 833402 c= 804531 s
2-8:  468244 vs 129239 	 487226 	 561350 c= 357987 s
2-9:  444877 vs 512039 	 459738 	 603699 c= 996275 s
3-0:  270570 vs 10044 	 705110 	 778006 c= 695066 s
3-1:  343013 vs 365182 	 927127 	 121449 c= 561945 s
3-2:  911545 vs 1002981 	 243780 	 137031 c= 289375 s
3-3:  725451 vs 562110 	 257541 	 791035 c= 744007 s
3-4:  400364 vs 764475 	 803495 	 648212 c= 39020 s
3-5:  269332 vs 145280 	 38993 	 1009583 c= 942289 s
3-6:  447793 vs 720023 	 416677 	 600783 c= 745230 s
3-7:  201324 vs 650042 	 579764 	 468812 c= 978298 s
3-8:  246253 vs 909750 	 532464 	 516112 c= 671290 s
3-9:  832079 vs 252768 	 16845 	 216497 c= 812653 s
0-1 mVecIdxMin: 0101011010    B
1-1 mVecIdxMin: 1001010101    B
2-1 mVecIdxMin: 1010011010    B
3-1 mVecIdxMin: 0101010110    B
p1.mShareMin[0].size()=5
0-0:  107727 vs 1 c= 341329 r
0===================
296143   diffDistB
178860   diffDistB
0-1:  867346 vs 1 c= 974465 r
0-2:  20584 vs 1 c= 551113 r
0-3:  434346 vs 1 c= 813787 r
0-4:  528590 vs 1 c= 1022676 r
0-5:  694245 vs 1 c= 986818 r
0-6:  419222 vs 1 c= 554737 r
0-7:  532446 vs 1 c= 372288 r
0-8:  10469 vs 1 c= 133057 r
0-9:  824515 vs 1 c= 60570 r
1-0:  530796 vs 1 c= 391910 r
1-1:  704151 vs 1 c= 551270 r
1-2:  836672 vs 1 c= 14729 r
1-3:  314473 vs 1 c= 987970 r
1-4:  310529 vs 0 c= 987970 r
1-5:  174073 vs 0 c= 987970 r
1-6:  254721 vs 0 c= 987970 r
1-7:  647405 vs 0 c= 987970 r
1-8:  989471 vs 0 c= 987970 r
1-9:  468402 vs 0 c= 987970 r
2-0:  131685 vs 0 c= 987970 r
2-1:  120302 vs 0 c= 987970 r
2-2:  674581 vs 1 c= 611289 r
2-3:  87769 vs 1 c= 436025 r
2-4:  198190 vs 1 c= 136724 r
2-5:  974316 vs 1 c= 778356 r
2-6:  758691 vs 0 c= 778356 r
2-7:  215174 vs 0 c= 778356 r
2-8:  468244 vs 0 c= 778356 r
2-9:  444877 vs 0 c= 778356 r
3-0:  705110 vs 1 c= 695066 r
3-1:  927127 vs 1 c= 561945 r
3-2:  911545 vs 0 c= 561945 r
3-3:  725451 vs 0 c= 561945 r
3-4:  803495 vs 1 c= 39020 r
3-5:  38993 vs 1 c= 942289 r
3-6:  447793 vs 0 c= 942289 r
3-7:  201324 vs 0 c= 942289 r
3-8:  246253 vs 0 c= 942289 r
3-9:  832079 vs 0 c= 942289 r
0-1 mVecIdxMin: 1111111111    A
1-1 mVecIdxMin: 1111000000    A
2-1 mVecIdxMin: 0011110000    A
3-1 mVecIdxMin: 1100110000    A
p0.mShareMin[0].size()=5
0===================
295850   diffDistA
178671   diffDistA
0: slt= 00    B
0: slt= 10    A
0: final= 1 vs 0 
--------------
1: slt= 00    B
1===================
-309579   diffDistA
-51493   diffDistA
1: slt= 10    A
1: final= 1 vs 0 
--------------
1===================
-309443   diffDistB
-51042   diffDistB
0: slt= 11    B
0: slt= 01    A
0: final= 1 vs 0 
--------------
1: slt= 11    B
2===================
-697857   diffDistA
87361   diffDistA
1: slt= 01    A
1: final= 1 vs 0 
--------------
2===================
-698095   diffDistB
87490   diffDistB
0: slt= 00    B
0: slt= 01    A
0: final= 0 vs 1 
--------------
1: slt= 11    B
3===================
-831014   diffDistA
-497030   diffDistA
1: slt= 01    A
1: final= 1 vs 0 
--------------
3===================
-830923   diffDistB
-497600   diffDistB
0: slt= 00    B
0: slt= 10    A
0: final= 1 vs 0 
--------------
1: slt= 11    B
0000111100110011    allBitVecs A
0000 vs 0011    bitGcMinOutVecs[] A
1: slt= 10    A
1: final= 0 vs 1 
--------------
1010010101011010    allBitVecs B
1010 vs 1010    bitGcMinOutVecs[] B
0000111100110011    allBitVecs B
0000 vs 0011    bitGcMinOutVecs[] B
1010010101011010    allBitVecs A
1010 vs 1010    bitGcMinOutVecs[] A
0:  2 append size() r
1:  2 append size() r
2:  2 append size() r
3:  2 append size() r
0-2 mVecIdxMin: 1110110010    B
1-2 mVecIdxMin: 0110110001    B
2-2 mVecIdxMin: 1000100110    B
3-2 mVecIdxMin: 0000101110    B
p1.mShareMin[0].size()=3
0===================
-609467   diffDistB
0:  2 append size() r
1:  2 append size() r
2:  2 append size() r
3:  2 append size() r
0-2 mVecIdxMin: 0110010011    A
1-2 mVecIdxMin: 0010100000    A
2-2 mVecIdxMin: 1001000100    A
3-2 mVecIdxMin: 1000101000    A
p0.mShareMin[0].size()=3
0===================
438981   diffDistA
0: slt= 00    B
1===================
54599   diffDistA
0: slt= 01    A
0: final= 0 vs 1 
--------------
1===================
54945   diffDistB
0: slt= 11    B
2===================
-517200   diffDistA
0: slt= 01    A
0: final= 1 vs 0 
--------------
2===================
-517061   diffDistB
0: slt= 00    B
3===================
263055   diffDistA
0: slt= 10    A
0: final= 1 vs 0 
--------------
3===================
262907   diffDistB
0: slt= 11    B
00110011    allBitVecs A
00 vs 11    bitGcMinOutVecs[] A
0: slt= 10    A
0: final= 0 vs 1 
--------------
01011010    allBitVecs B
01 vs 10    bitGcMinOutVecs[] B
1-2 stepIdxMin: 1 4 vs 4 s
1-1:   	 0010 	 1010 c= 1100 s= 1010 b= 1 v= 1000 correctionV s
00110011    allBitVecs B
00 vs 11    bitGcMinOutVecs[] B
1-2 stepIdxMin: 1 4 vs 4 r
1-1:  s=1010 b=1 c= 1100 cs 1 correctionV r
01011010    allBitVecs A
01 vs 10    bitGcMinOutVecs[] A
1-2 stepIdxMin: 1 4 vs 4 s
1-1:   	 0000 	 1100 c= 0101 s= 1100 b= 1 v= 1100 correctionV s
0:  2 append size() r
1:  2 append size() r
2:  2 append size() r
3:  2 append size() r
0-4 mVecIdxMin: 0001011110    B
1-4 mVecIdxMin: 0110011001    B
2-4 mVecIdxMin: 0101100110    B
3-4 mVecIdxMin: 0000010110    B
p1.mShareMin[0].size()=2
1-2 stepIdxMin: 1 4 vs 4 r
1-1:  s=1100 b=1 c= 0101 cs 1 correctionV r
0===================
92123   diffDistB
0:  2 append size() r
1:  2 append size() r
2:  2 append size() r
3:  2 append size() r
0-4 mVecIdxMin: 0001111111    A
1-4 mVecIdxMin: 0010011000    A
2-4 mVecIdxMin: 0100100100    A
3-4 mVecIdxMin: 0000010000    A
p0.mShareMin[0].size()=2
0===================
91828   diffDistA
0: slt= 00    B
1===================
291743   diffDistA
0: slt= 10    A
0: final= 1 vs 0 
--------------
1===================
292034   diffDistB
0: slt= 11    B
2===================
292023   diffDistA
0: slt= 01    A
0: final= 1 vs 0 
--------------
2===================
292588   diffDistB
0: slt= 00    B
3===================
155576   diffDistA
0: slt= 10    A
0: final= 1 vs 0 
--------------
3===================
155312   diffDistB
0: slt= 11    B
11 =========mVecGcMinOutput[i]==========
00110011    allBitVecs A
00 vs 11    bitGcMinOutVecs[] A
0: slt= 10    A
0: final= 0 vs 1 
--------------
01 ========= mVecGcMinOutput r==========
10011010    allBitVecs B
10 vs 10    bitGcMinOutVecs[] B
1-2 stepIdxMin: 1 8 vs 2 s
1-1:   	 00 	 00 c= 10 s= 00 b= 1 v= 00 correctionV s
00110011    allBitVecs B
00 vs 11    bitGcMinOutVecs[] B
1-2 stepIdxMin: 1 8 vs 2 r
1-1:  s=00 b=1 c= 10 cs 1 correctionV r
10011010    allBitVecs A
10 vs 10    bitGcMinOutVecs[] A
1-2 stepIdxMin: 1 8 vs 2 s
1-1:   	 10 	 11 c= 11 s= 11 b= 1 v= 01 correctionV s
0:  0 append size() r
1:  0 append size() r
2:  0 append size() r
3:  0 append size() r
0-8 mVecIdxMin: 1110010001    B
1-8 mVecIdxMin: 0001011011    B
2-8 mVecIdxMin: 1110111000    B
3-8 mVecIdxMin: 0001001110    B
p1.mShareMin[0].size()=1 end
1-2 stepIdxMin: 1 8 vs 2 r
1-1:  s=11 b=1 c= 11 cs 1 correctionV r
0:  0 append size() r
1:  0 append size() r
2:  0 append size() r
3:  0 append size() r
0-8 mVecIdxMin: 1110110001    A
1-8 mVecIdxMin: 0101011011    A
2-8 mVecIdxMin: 1111111000    A
3-8 mVecIdxMin: 0001001100    A
0: min=169 0000100000  	 vs 	 41 467 334 500 169 724 478 358 962 464 
1: min=145 0100000000  	 vs 	 705 145 281 827 961 491 995 942 827 436 
2: min=153 0001000000  	 vs 	 391 604 902 153 292 382 421 716 718 895 
3: min=35 0000000010  	 vs 	 447 726 771 538 869 912 667 299 35 894 
945fc4905b5338e090cbe826d7b48c64
000000000000000090cbe826d7b48c64
0000000000000000945fc4905b5338e0
