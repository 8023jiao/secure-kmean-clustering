0-0:  1026681 c
1-0:  39828 c
2-0:  701993 c
3-0:  718452 c
4-0:  911248 c
5-0:  556328 c
6-0:  322553 c
7-0:  446863 c
8-0:  466916 c
9-0:  159727 c
10-0:  512290 c
11-0:  703987 c
12-0:  364550 c
13-0:  202957 c
14-0:  547749 c
15-0:  976017 c
41:315413 + 733204 = 41 dist
67:646393 + 402250 = 67 dist
34:565454 + 483156 = 34 dist
0:180009 + 868567 = 0 dist
69:173183 + 875462 = 69 dist
24:935905 + 112695 = 24 dist
78:854598 + 194056 = 78 dist
58:726137 + 322497 = 58 dist
62:1002285 + 46353 = 62 dist
64:37843 + 1010797 = 64 dist
5:627500 + 421081 = 5 dist
45:659699 + 388922 = 45 dist
81:255252 + 793405 = 81 dist
27:961428 + 87175 = 27 dist
61:860930 + 187707 = 61 dist
91:970898 + 77769 = 91 dist
95:874222 + 174449 = 95 dist
42:762925 + 285693 = 42 dist
27:615413 + 433190 = 27 dist
36:886663 + 161949 = 36 dist
91:338564 + 710103 = 91 dist
4:864463 + 184117 = 4 dist
2:419601 + 628977 = 2 dist
53:812240 + 236389 = 53 dist
92:786329 + 262339 = 92 dist
82:479336 + 569322 = 82 dist
21:1030971 + 17626 = 21 dist
16:973739 + 74853 = 16 dist
18:772867 + 275727 = 18 dist
95:765741 + 282930 = 95 dist
47:19700 + 1028923 = 47 dist
26:1034610 + 13992 = 26 dist
0: slt= 11    B
0: slt= 01    A
0: final= 1 vs 0 
--------------
1: slt= 00    B
1: slt= 01    A
1: final= 0 vs 1 
--------------
2: slt= 00    B
2: slt= 01    A
2: final= 0 vs 1 
--------------
3: slt= 11    B
3: slt= 10    A
3: final= 0 vs 1 
--------------
4: slt= 00    B
4: slt= 10    A
4: final= 1 vs 0 
--------------
5: slt= 00    B
5: slt= 10    A
5: final= 1 vs 0 
--------------
6: slt= 00    B
6: slt= 01    A
6: final= 0 vs 1 
--------------
7: slt= 11    B
7: slt= 01    A
7: final= 1 vs 0 
--------------
0: slt= 00    B
0: slt= 01    A
0: final= 0 vs 1 
--------------
1: slt= 11    B
1: slt= 01    A
1: final= 1 vs 0 
--------------
2: slt= 11    B
2: slt= 10    A
2: final= 0 vs 1 
--------------
3: slt= 00    B
3: slt= 10    A
3: final= 1 vs 0 
--------------
4: slt= 00    B
4: slt= 01    A
4: final= 0 vs 1 
--------------
5: slt= 11    B
5: slt= 10    A
5: final= 0 vs 1 
--------------
6: slt= 00    B
6: slt= 10    A
6: final= 1 vs 0 
--------------
7: slt= 00    B
11000011000000110011110000110000    allBitVecs A
1100001100000011 vs 0011110000110000    bitGcMinOutVecs[] A
7: slt= 01    A
7: final= 0 vs 1 
--------------
01010110101001010101101001101001    allBitVecs B
0101011010100101 vs 0101101001101001    bitGcMinOutVecs[] B
0-0:  165608 vs 380545 	 898771 	 149805 c= 518226 s
0-1:  838954 vs 300561 	 192561 	 856015 c= 940576 s
0-2:  431586 vs 468204 	 997040 	 616990 c= 528836 s
0-3:  712308 vs 606935 	 892317 	 336268 c= 285382 s
0-4:  277233 vs 536820 	 450416 	 771343 c= 962172 s
0-5:  609081 vs 240859 	 496410 	 439495 c= 255551 s
0-6:  534817 vs 181604 	 728795 	 319781 c= 547191 s
0-7:  766970 vs 682347 	 40833 	 1007743 c= 407062 s
0-8:  186680 vs 412809 	 140389 	 861896 c= 776156 s
0-9:  981716 vs 103346 	 1019559 	 66860 c= 916213 s
0-10:  722229 vs 441410 	 301153 	 326347 c= 908319 s
0-11:  549044 vs 893654 	 160167 	 499532 c= 315089 s
0-12:  447393 vs 19208 	 702645 	 601183 c= 683437 s
0-13:  1045647 vs 377568 	 958499 	 2929 c= 580931 s
0-14:  192572 vs 433272 	 380218 	 668358 c= 995522 s
0-15:  843603 vs 462047 	 921281 	 127295 c= 459234 s
1-0:  29134 vs 225101 	 903356 	 1019442 c= 678255 s
1-1:  324496 vs 550252 	 38845 	 724080 c= 537169 s
1-2:  261829 vs 1044202 	 694992 	 353584 c= 699366 s
1-3:  733213 vs 21972 	 895126 	 153450 c= 873154 s
1-4:  560191 vs 890279 	 221627 	 826949 c= 379924 s
1-5:  565548 vs 447421 	 749661 	 298915 c= 302240 s
1-6:  722499 vs 567987 	 93524 	 326077 c= 574113 s
1-7:  432835 vs 849492 	 196499 	 615741 c= 395583 s
1-8:  493871 vs 981816 	 231624 	 554705 c= 298384 s
1-9:  772653 vs 721987 	 203413 	 275923 c= 530002 s
1-10:  5245 vs 465390 	 22850 	 1025726 c= 606036 s
1-11:  193865 vs 153698 	 268702 	 779874 c= 115004 s
1-12:  869394 vs 241535 	 593685 	 179182 c= 352150 s
1-13:  782238 vs 477561 	 499403 	 266338 c= 21842 s
1-14:  92020 vs 992394 	 111720 	 956556 c= 167902 s
1-15:  436413 vs 184298 	 422447 	 612163 c= 238149 s
11000011000000110011110000110000    allBitVecs B
1100001100000011 vs 0011110000110000    bitGcMinOutVecs[] B
0-0:  165608 vs 0 c= 0 r
0-1:  192561 vs 1 c= 940576 r
0-2:  431586 vs 0 c= 940576 r
0-3:  892317 vs 1 c= 285382 r
0-4:  277233 vs 0 c= 285382 r
0-5:  496410 vs 1 c= 255551 r
0-6:  728795 vs 1 c= 547191 r
0-7:  766970 vs 0 c= 547191 r
0-8:  140389 vs 1 c= 776156 r
0-9:  981716 vs 0 c= 776156 r
0-10:  301153 vs 1 c= 908319 r
0-11:  549044 vs 0 c= 908319 r
0-12:  447393 vs 0 c= 908319 r
0-13:  958499 vs 1 c= 580931 r
0-14:  192572 vs 0 c= 580931 r
0-15:  921281 vs 1 c= 459234 r
1-0:  29134 vs 0 c= 459234 r
1-1:  38845 vs 1 c= 537169 r
1-2:  261829 vs 0 c= 537169 r
1-3:  895126 vs 1 c= 873154 r
1-4:  221627 vs 1 c= 379924 r
1-5:  565548 vs 0 c= 379924 r
1-6:  93524 vs 1 c= 574113 r
1-7:  432835 vs 0 c= 574113 r
1-8:  493871 vs 0 c= 574113 r
1-9:  203413 vs 1 c= 530002 r
1-10:  22850 vs 1 c= 606036 r
1-11:  193865 vs 0 c= 606036 r
1-12:  593685 vs 1 c= 352150 r
1-13:  782238 vs 0 c= 352150 r
1-14:  92020 vs 0 c= 352150 r
1-15:  422447 vs 1 c= 238149 r
01010110101001010101101001101001    allBitVecs A
0101011010100101 vs 0101101001101001    bitGcMinOutVecs[] A
0-0:  673140 vs 814974 	 357768 	 375436 c= 591370 s
0-1:  687804 vs 941457 	 285554 	 763022 c= 392673 s
0-2:  518047 vs 193433 	 1001203 	 530529 c= 807770 s
0-3:  669135 vs 547517 	 849144 	 199432 c= 301627 s
0-4:  554490 vs 334443 	 381376 	 494086 c= 46933 s
0-5:  756003 vs 1017408 	 643308 	 405268 c= 674476 s
0-6:  465991 vs 913061 	 271935 	 776641 c= 407450 s
0-7:  569931 vs 160158 	 892428 	 478645 c= 732270 s
0-8:  925988 vs 432507 	 879635 	 168941 c= 447128 s
0-9:  763945 vs 435174 	 726166 	 284631 c= 290992 s
0-10:  138886 vs 276249 	 766381 	 282195 c= 490132 s
0-11:  152881 vs 616858 	 541803 	 895695 c= 973521 s
0-12:  821943 vs 648745 	 566772 	 226633 c= 966603 s
0-13:  375079 vs 392978 	 287904 	 760672 c= 943502 s
0-14:  142638 vs 310529 	 330345 	 905938 c= 19816 s
0-15:  600459 vs 174073 	 522690 	 525886 c= 348617 s
1-0:  254721 vs 659511 	 429170 	 793855 c= 818235 s
1-1:  647405 vs 385626 	 361712 	 686864 c= 1024662 s
1-2:  725491 vs 989471 	 110105 	 323085 c= 169210 s
1-3:  550608 vs 468402 	 388659 	 659917 c= 968833 s
1-4:  846666 vs 131685 	 136563 	 912013 c= 4878 s
1-5:  570327 vs 120302 	 754444 	 478249 c= 634142 s
1-6:  63292 vs 937730 	 482891 	 565685 c= 593737 s
1-7:  700320 vs 566952 	 936709 	 348256 c= 369757 s
1-8:  61466 vs 180293 	 323805 	 987110 c= 143512 s
1-9:  195960 vs 959 	 675214 	 373362 c= 674255 s
1-10:  276405 vs 758691 	 258779 	 789797 c= 548664 s
1-11:  742770 vs 215174 	 817623 	 305806 c= 602449 s
1-12:  468244 vs 129239 	 192517 	 856059 c= 63278 s
1-13:  444877 vs 512039 	 727807 	 603699 c= 215768 s
1-14:  10044 vs 270570 	 1038967 	 1038532 c= 768397 s
1-15:  365182 vs 343013 	 351190 	 697386 c= 8177 s
0-1 mVecIdxMin: 0101011010100101    B
1-1 mVecIdxMin: 0101101001101001    B
p1.mShareMin[0].size()=8
0===================
557237   diffDistB
29478   diffDistB
452410   diffDistB
152480   diffDistB
0-0:  357768 vs 1 c= 591370 r
0-1:  285554 vs 1 c= 392673 r
0-2:  518047 vs 0 c= 392673 r
0-3:  669135 vs 0 c= 392673 r
0-4:  554490 vs 0 c= 392673 r
0-5:  756003 vs 0 c= 392673 r
0-6:  271935 vs 1 c= 407450 r
0-7:  892428 vs 1 c= 732270 r
0-8:  925988 vs 0 c= 732270 r
0-9:  763945 vs 0 c= 732270 r
0-10:  138886 vs 0 c= 732270 r
0-11:  152881 vs 0 c= 732270 r
0-12:  821943 vs 0 c= 732270 r
0-13:  375079 vs 0 c= 732270 r
0-14:  330345 vs 1 c= 19816 r
0-15:  522690 vs 1 c= 348617 r
1-0:  254721 vs 0 c= 348617 r
1-1:  647405 vs 0 c= 348617 r
1-2:  110105 vs 1 c= 169210 r
1-3:  388659 vs 1 c= 968833 r
1-4:  136563 vs 1 c= 4878 r
1-5:  754444 vs 1 c= 634142 r
1-6:  63292 vs 0 c= 634142 r
1-7:  700320 vs 0 c= 634142 r
1-8:  61466 vs 0 c= 634142 r
1-9:  195960 vs 0 c= 634142 r
1-10:  258779 vs 1 c= 548664 r
1-11:  817623 vs 1 c= 602449 r
1-12:  468244 vs 0 c= 602449 r
1-13:  444877 vs 0 c= 602449 r
1-14:  10044 vs 0 c= 602449 r
1-15:  365182 vs 0 c= 602449 r
0-1 mVecIdxMin: 1100001100000011    A
1-1 mVecIdxMin: 0011110000110000    A
p0.mShareMin[0].size()=8
0===================
557278   diffDistA
29444   diffDistA
452467   diffDistA
152446   diffDistA
0: slt= 00    B
0: slt= 01    A
0: final= 0 vs 1 
--------------
1: slt= 11    B
1: slt= 01    A
1: final= 1 vs 0 
--------------
2: slt= 00    B
2: slt= 01    A
2: final= 0 vs 1 
--------------
3: slt= 00    B
1===================
-457302   diffDistA
311441   diffDistA
-745372   diffDistA
-585304   diffDistA
3: slt= 10    A
3: final= 1 vs 0 
--------------
1===================
-457317   diffDistB
311439   diffDistB
-745438   diffDistB
-585296   diffDistB
0: slt= 11    B
0: slt= 10    A
0: final= 0 vs 1 
--------------
1: slt= 11    B
1: slt= 10    A
1: final= 0 vs 1 
--------------
2: slt= 00    B
2: slt= 01    A
2: final= 0 vs 1 
--------------
3: slt= 11    B
0011000011110011    allBitVecs A
00110000 vs 11110011    bitGcMinOutVecs[] A
3: slt= 01    A
3: final= 1 vs 0 
--------------
0101011010100101    allBitVecs B
01010110 vs 10100101    bitGcMinOutVecs[] B
0: 11 vs 1100001100000011 chunk 
0-0:  29184 vs 335198 	 629750 	 1019392 c= 294552 rs
0-0:  10 vs 00 	 10 	 01 c= 01 correctionV s
0-0:  8 bitGcMinOutVecs[i].size()
0-0:  01 vs 01 testV s
0: 00 vs 1100001100000011 chunk 
0-1:  132775 vs 1011897 	 176063 	 915801 c= 212742 rs
0-1:  01 vs 01 	 01 	 01 c= 00 correctionV s
0-1:  8 bitGcMinOutVecs[i].size()
0-1:  00 vs 00 testV s
0: 00 vs 1100001100000011 chunk 
0-2:  176976 vs 129390 	 801373 	 247203 c= 671983 rs
0-2:  00 vs 01 	 00 	 00 c= 01 correctionV s
0-2:  8 bitGcMinOutVecs[i].size()
0-2:  01 vs 01 testV s
0: 11 vs 1100001100000011 chunk 
0-3:  335468 vs 646511 	 989309 	 59267 c= 342798 rs
0-3:  01 vs 10 	 01 	 10 c= 00 correctionV s
0-3:  8 bitGcMinOutVecs[i].size()
0-3:  00 vs 00 testV s
0: 00 vs 1100001100000011 chunk 
0-4:  827840 vs 800651 	 300801 	 220736 c= 548726 rs
0-4:  00 vs 11 	 00 	 00 c= 11 correctionV s
0-4:  8 bitGcMinOutVecs[i].size()
0-4:  11 vs 11 testV s
0: 00 vs 1100001100000011 chunk 
0-5:  38237 vs 998516 	 107307 	 1010339 c= 157367 rs
0-5:  10 vs 01 	 10 	 10 c= 11 correctionV s
0-5:  8 bitGcMinOutVecs[i].size()
0-5:  11 vs 11 testV s
0: 00 vs 1100001100000011 chunk 
0-6:  737659 vs 29971 	 441641 	 310917 c= 411670 rs
0-6:  11 vs 01 	 11 	 11 c= 10 correctionV s
0-6:  8 bitGcMinOutVecs[i].size()
0-6:  10 vs 10 testV s
0: 11 vs 1100001100000011 chunk 
0-7:  190067 vs 745244 	 790179 	 858509 c= 44935 rs
0-7:  01 vs 11 	 01 	 10 c= 01 correctionV s
0-7:  8 bitGcMinOutVecs[i].size()
0-7:  01 vs 01 testV s
1: 00 vs 0011110000110000 chunk 
1-0:  536723 vs 67339 	 1036803 	 11773 c= 969464 rs
1-0:  01 vs 10 	 01 	 01 c= 11 correctionV s
1-0:  8 bitGcMinOutVecs[i].size()
1-0:  11 vs 11 testV s
1: 11 vs 0011110000110000 chunk 
1-1:  484096 vs 644588 	 526874 	 521702 c= 930862 rs
1-1:  01 vs 01 	 01 	 10 c= 11 correctionV s
1-1:  8 bitGcMinOutVecs[i].size()
1-1:  11 vs 11 testV s
1: 11 vs 0011110000110000 chunk 
1-2:  264099 vs 290847 	 344380 	 704196 c= 53533 rs
1-2:  11 vs 00 	 11 	 00 c= 00 correctionV s
1-2:  8 bitGcMinOutVecs[i].size()
1-2:  00 vs 00 testV s
1: 00 vs 0011110000110000 chunk 
1-3:  1044828 vs 976146 	 387974 	 660602 c= 460404 rs
1-3:  01 vs 10 	 01 	 01 c= 11 correctionV s
1-3:  8 bitGcMinOutVecs[i].size()
1-3:  11 vs 11 testV s
1: 00 vs 0011110000110000 chunk 
1-4:  640979 vs 540133 	 680457 	 407597 c= 140324 rs
1-4:  10 vs 01 	 10 	 10 c= 11 correctionV s
1-4:  8 bitGcMinOutVecs[i].size()
1-4:  11 vs 11 testV s
1: 11 vs 0011110000110000 chunk 
1-5:  509460 vs 549615 	 245734 	 539116 c= 744695 rs
1-5:  11 vs 01 	 11 	 00 c= 01 correctionV s
1-5:  8 bitGcMinOutVecs[i].size()
1-5:  01 vs 01 testV s
1: 00 vs 0011110000110000 chunk 
1-6:  134822 vs 200978 	 873333 	 175243 c= 672355 rs
1-6:  01 vs 10 	 01 	 01 c= 11 correctionV s
1-6:  8 bitGcMinOutVecs[i].size()
1-6:  11 vs 11 testV s
1: 00 vs 0011110000110000 chunk 
1-7:  391754 vs 705631 	 544961 	 503615 c= 887906 rs
1-7:  01 vs 00 	 01 	 01 c= 01 correctionV s
1-7:  8 bitGcMinOutVecs[i].size()
1-7:  01 vs 01 testV s
0011000011110011    allBitVecs B
00110000 vs 11110011    bitGcMinOutVecs[] B
0-0:  29184 vs 0 c= 0 r
0-0:  10 vs 0 c=  cs 1 correctionV r
0-1:  00 testV r
0-1:  176063 vs 1 c= 212742 r
0-1:  01 vs 1 c= 00 cs 1 correctionV r
0-2:  176976 vs 0 c= 212742 r
0-2:  00 vs 0 c= 00 cs 1 correctionV r
0-3:  00 testV r
0-3:  989309 vs 1 c= 342798 r
0-3:  10 vs 1 c= 00 cs 1 correctionV r
0-4:  827840 vs 0 c= 342798 r
0-4:  00 vs 0 c= 00 cs 1 correctionV r
0-5:  11 testV r
0-5:  107307 vs 1 c= 157367 r
0-5:  10 vs 1 c= 11 cs 1 correctionV r
0-6:  10 testV r
0-6:  441641 vs 1 c= 411670 r
0-6:  11 vs 1 c= 10 cs 1 correctionV r
0-7:  190067 vs 0 c= 411670 r
0-7:  01 vs 0 c= 10 cs 1 correctionV r
1-0:  11 testV r
1-0:  1036803 vs 1 c= 969464 r
1-0:  01 vs 1 c= 11 cs 1 correctionV r
1-1:  484096 vs 0 c= 969464 r
1-1:  01 vs 0 c= 11 cs 1 correctionV r
1-2:  00 testV r
1-2:  344380 vs 1 c= 53533 r
1-2:  00 vs 1 c= 00 cs 1 correctionV r
1-3:  1044828 vs 0 c= 53533 r
1-3:  01 vs 0 c= 00 cs 1 correctionV r
1-4:  640979 vs 0 c= 53533 r
1-4:  10 vs 0 c= 00 cs 1 correctionV r
1-5:  01 testV r
1-5:  245734 vs 1 c= 744695 r
1-5:  00 vs 1 c= 01 cs 1 correctionV r
1-6:  134822 vs 0 c= 744695 r
1-6:  01 vs 0 c= 01 cs 1 correctionV r
1-7:  01 testV r
1-7:  544961 vs 1 c= 887906 r
1-7:  01 vs 1 c= 01 cs 1 correctionV r
0101011010100101    allBitVecs A
01010110 vs 10100101    bitGcMinOutVecs[] A
0: 01 vs 0101011010100101 chunk 
0-0:  11809 vs 615703 	 459860 	 1036767 c= 892733 rs
0-0:  01 vs 11 	 01 	 00 c= 11 correctionV s
0-0:  8 bitGcMinOutVecs[i].size()
0-0:  11 vs 11 testV s
0: 01 vs 0101011010100101 chunk 
0-1:  725761 vs 170650 	 769049 	 279527 c= 598399 rs
0-1:  11 vs 00 	 11 	 10 c= 10 correctionV s
0-1:  8 bitGcMinOutVecs[i].size()
0-1:  10 vs 10 testV s
0: 01 vs 0101011010100101 chunk 
0-2:  842079 vs 405944 	 417924 	 206497 c= 11980 rs
0-2:  10 vs 00 	 10 	 11 c= 11 correctionV s
0-2:  8 bitGcMinOutVecs[i].size()
0-2:  11 vs 11 testV s
0: 10 vs 0101011010100101 chunk 
0-3:  580590 vs 370027 	 975267 	 73309 c= 605240 rs
0-3:  11 vs 10 	 11 	 01 c= 11 correctionV s
0-3:  8 bitGcMinOutVecs[i].size()
0-3:  11 vs 11 testV s
0: 10 vs 0101011010100101 chunk 
0-4:  260219 vs 545475 	 787320 	 788357 c= 241845 rs
0-4:  00 vs 01 	 00 	 10 c= 11 correctionV s
0-4:  8 bitGcMinOutVecs[i].size()
0-4:  11 vs 11 testV s
0: 10 vs 0101011010100101 chunk 
0-5:  552860 vs 835800 	 621925 	 426651 c= 834701 rs
0-5:  11 vs 10 	 11 	 01 c= 11 correctionV s
0-5:  8 bitGcMinOutVecs[i].size()
0-5:  11 vs 11 testV s
0: 01 vs 0101011010100101 chunk 
0-6:  389533 vs 641994 	 93488 	 955088 c= 500070 rs
0-6:  00 vs 10 	 00 	 01 c= 11 correctionV s
0-6:  8 bitGcMinOutVecs[i].size()
0-6:  11 vs 11 testV s
0: 01 vs 0101011010100101 chunk 
0-7:  967399 vs 379857 	 367348 	 81177 c= 1036067 rs
0-7:  01 vs 10 	 01 	 00 c= 10 correctionV s
0-7:  8 bitGcMinOutVecs[i].size()
0-7:  10 vs 10 testV s
1: 01 vs 0101101001101001 chunk 
1-0:  674678 vs 885970 	 174556 	 874020 c= 337162 rs
1-0:  10 vs 00 	 10 	 11 c= 11 correctionV s
1-0:  8 bitGcMinOutVecs[i].size()
1-0:  11 vs 11 testV s
1: 01 vs 0101101001101001 chunk 
1-1:  580460 vs 50324 	 623265 	 468116 c= 572941 rs
1-1:  10 vs 00 	 10 	 11 c= 11 correctionV s
1-1:  8 bitGcMinOutVecs[i].size()
1-1:  11 vs 11 testV s
1: 10 vs 0101101001101001 chunk 
1-2:  638673 vs 372403 	 558388 	 490188 c= 185985 rs
1-2:  10 vs 10 	 10 	 00 c= 10 correctionV s
1-2:  8 bitGcMinOutVecs[i].size()
1-2:  10 vs 10 testV s
1: 10 vs 0101101001101001 chunk 
1-3:  869082 vs 168254 	 212230 	 179494 c= 43976 rs
1-3:  01 vs 10 	 01 	 11 c= 01 correctionV s
1-3:  8 bitGcMinOutVecs[i].size()
1-3:  01 vs 01 testV s
1: 01 vs 0101101001101001 chunk 
1-4:  512736 vs 140303 	 473340 	 535840 c= 333037 rs
1-4:  11 vs 01 	 11 	 10 c= 11 correctionV s
1-4:  8 bitGcMinOutVecs[i].size()
1-4:  11 vs 11 testV s
1: 10 vs 0101101001101001 chunk 
1-5:  180336 vs 766677 	 965170 	 83406 c= 198493 rs
1-5:  01 vs 10 	 01 	 11 c= 01 correctionV s
1-5:  8 bitGcMinOutVecs[i].size()
1-5:  01 vs 01 testV s
1: 10 vs 0101101001101001 chunk 
1-6:  851002 vs 258954 	 540955 	 197574 c= 282001 rs
1-6:  10 vs 01 	 10 	 00 c= 01 correctionV s
1-6:  8 bitGcMinOutVecs[i].size()
1-6:  01 vs 01 testV s
1: 01 vs 0101101001101001 chunk 
1-7:  614030 vs 721731 	 460797 	 587779 c= 787642 rs
1-7:  11 vs 11 	 11 	 10 c= 01 correctionV s
1-7:  8 bitGcMinOutVecs[i].size()
1-7:  01 vs 01 testV s
0-2 mVecIdxMin: 1111101100111000    B
1-2 mVecIdxMin: 1011000001111111    B
p1.mShareMin[0].size()=4
0===================
-75450   diffDistB
566394   diffDistB
0-0:  11809 vs 0 c= 0 r
0-0:  01 vs 0 c=  cs 1 correctionV r
0-1:  725761 vs 0 c= 0 r
0-1:  11 vs 0 c=  cs 1 correctionV r
0-2:  11 testV r
0-2:  417924 vs 1 c= 11980 r
0-2:  11 vs 1 c= 11 cs 1 correctionV r
0-3:  11 testV r
0-3:  975267 vs 1 c= 605240 r
0-3:  01 vs 1 c= 11 cs 1 correctionV r
0-4:  260219 vs 0 c= 605240 r
0-4:  00 vs 0 c= 11 cs 1 correctionV r
0-5:  552860 vs 0 c= 605240 r
0-5:  11 vs 0 c= 11 cs 1 correctionV r
0-6:  389533 vs 0 c= 605240 r
0-6:  00 vs 0 c= 11 cs 1 correctionV r
0-7:  967399 vs 0 c= 605240 r
0-7:  01 vs 0 c= 11 cs 1 correctionV r
1-0:  11 testV r
1-0:  174556 vs 1 c= 337162 r
1-0:  11 vs 1 c= 11 cs 1 correctionV r
1-1:  11 testV r
1-1:  623265 vs 1 c= 572941 r
1-1:  11 vs 1 c= 11 cs 1 correctionV r
1-2:  10 testV r
1-2:  558388 vs 1 c= 185985 r
1-2:  00 vs 1 c= 10 cs 1 correctionV r
1-3:  01 testV r
1-3:  212230 vs 1 c= 43976 r
1-3:  11 vs 1 c= 01 cs 1 correctionV r
1-4:  512736 vs 0 c= 43976 r
1-4:  11 vs 0 c= 01 cs 1 correctionV r
1-5:  180336 vs 0 c= 43976 r
1-5:  01 vs 0 c= 01 cs 1 correctionV r
1-6:  01 testV r
1-6:  540955 vs 1 c= 282001 r
1-6:  00 vs 1 c= 01 cs 1 correctionV r
1-7:  01 testV r
1-7:  460797 vs 1 c= 787642 r
1-7:  10 vs 1 c= 01 cs 1 correctionV r
0-2 mVecIdxMin: 1110111100011100    A
1-2 mVecIdxMin: 1001001001100111    A
p0.mShareMin[0].size()=4
0===================
-75474   diffDistA
566372   diffDistA
0: slt= 11    B
0: slt= 01    A
0: final= 1 vs 0 
--------------
1: slt= 11    B
1===================
244456   diffDistA
-40825   diffDistA
1: slt= 01    A
1: final= 1 vs 0 
--------------
1===================
244431   diffDistB
-40823   diffDistB
0: slt= 11    B
0: slt= 10    A
0: final= 0 vs 1 
--------------
1: slt= 00    B
11111100    allBitVecs A
1111 vs 1100    bitGcMinOutVecs[] A
1: slt= 10    A
1: final= 1 vs 0 
--------------
01011010    allBitVecs B
0101 vs 1010    bitGcMinOutVecs[] B
0: 1110 vs 1110111100011100 chunk 
0-0:  502873 vs 66156 	 975838 	 72738 c= 909682 rs
0-0:  0000 vs 1110 	 0000 	 1110 c= 0000 correctionV s
0-0:  4 bitGcMinOutVecs[i].size()
0-0:  0000 vs 0000 testV s
0: 1111 vs 1110111100011100 chunk 
0-1:  164394 vs 943622 	 561885 	 486691 c= 666839 rs
0-1:  1111 vs 0000 	 1111 	 0000 c= 0000 correctionV s
0-1:  4 bitGcMinOutVecs[i].size()
0-1:  0000 vs 0000 testV s
0: 0001 vs 1110111100011100 chunk 
0-2:  814449 vs 473355 	 867447 	 181129 c= 394092 rs
0-2:  0101 vs 1010 	 0101 	 0100 c= 1110 correctionV s
0-2:  4 bitGcMinOutVecs[i].size()
0-2:  1110 vs 1110 testV s
0: 1100 vs 1110111100011100 chunk 
0-3:  809190 vs 571691 	 379984 	 668592 c= 856869 rs
0-3:  0010 vs 0110 	 0010 	 1110 c= 1000 correctionV s
0-3:  4 bitGcMinOutVecs[i].size()
0-3:  1000 vs 1000 testV s
1: 1001 vs 1001001001100111 chunk 
1-0:  12152 vs 22542 	 778008 	 270568 c= 755466 rs
1-0:  1110 vs 0010 	 1110 	 0111 c= 0101 correctionV s
1-0:  4 bitGcMinOutVecs[i].size()
1-0:  0101 vs 0101 testV s
1: 0010 vs 1001001001100111 chunk 
1-1:  791491 vs 346599 	 753227 	 295349 c= 406628 rs
1-1:  0111 vs 1111 	 0111 	 0101 c= 1010 correctionV s
1-1:  4 bitGcMinOutVecs[i].size()
1-1:  1010 vs 1010 testV s
1: 0110 vs 1001001001100111 chunk 
1-2:  802094 vs 407767 	 344727 	 246482 c= 985536 rs
1-2:  0101 vs 1110 	 0101 	 0011 c= 1101 correctionV s
1-2:  4 bitGcMinOutVecs[i].size()
1-2:  1101 vs 1101 testV s
1: 0111 vs 1001001001100111 chunk 
1-3:  1020876 vs 367511 	 604334 	 27700 c= 236823 rs
1-3:  0101 vs 1000 	 0101 	 0010 c= 1010 correctionV s
1-3:  4 bitGcMinOutVecs[i].size()
1-3:  1010 vs 1010 testV s
11111100    allBitVecs B
1111 vs 1100    bitGcMinOutVecs[] B
0-0:  502873 vs 0 c= 0 r
0-0:  0000 vs 0 c=  cs 1 correctionV r
0-1:  0000 testV r
0-1:  561885 vs 1 c= 666839 r
0-1:  0000 vs 1 c= 0000 cs 1 correctionV r
0-2:  814449 vs 0 c= 666839 r
0-2:  0101 vs 0 c= 0000 cs 1 correctionV r
0-3:  1000 testV r
0-3:  379984 vs 1 c= 856869 r
0-3:  1110 vs 1 c= 1000 cs 1 correctionV r
1-0:  0101 testV r
1-0:  778008 vs 1 c= 755466 r
1-0:  0111 vs 1 c= 0101 cs 1 correctionV r
1-1:  791491 vs 0 c= 755466 r
1-1:  0111 vs 0 c= 0101 cs 1 correctionV r
1-2:  1101 testV r
1-2:  344727 vs 1 c= 985536 r
1-2:  0011 vs 1 c= 1101 cs 1 correctionV r
1-3:  1020876 vs 0 c= 985536 r
1-3:  0101 vs 0 c= 1101 cs 1 correctionV r
01011010    allBitVecs A
0101 vs 1010    bitGcMinOutVecs[] A
0: 1111 vs 1111101100111000 chunk 
0-0:  614862 vs 255987 	 39251 	 433714 c= 831840 rs
0-0:  0100 vs 0001 	 0100 	 1011 c= 1010 correctionV s
0-0:  4 bitGcMinOutVecs[i].size()
0-0:  1010 vs 1010 testV s
0: 1011 vs 1111101100111000 chunk 
0-1:  671122 vs 408319 	 273607 	 774969 c= 913864 rs
0-1:  0100 vs 0000 	 0100 	 1111 c= 1111 correctionV s
0-1:  4 bitGcMinOutVecs[i].size()
0-1:  1111 vs 1111 testV s
0: 0011 vs 1111101100111000 chunk 
0-2:  77469 vs 102776 	 130472 	 971107 c= 27696 rs
0-2:  0011 vs 0111 	 0011 	 0000 c= 0111 correctionV s
0-2:  4 bitGcMinOutVecs[i].size()
0-2:  0111 vs 0111 testV s
0: 1000 vs 1111101100111000 chunk 
0-3:  663312 vs 436053 	 43915 	 1004661 c= 656438 rs
0-3:  0000 vs 1001 	 0000 	 1000 c= 0001 correctionV s
0-3:  4 bitGcMinOutVecs[i].size()
0-3:  0001 vs 0001 testV s
1: 1011 vs 1011000001111111 chunk 
1-0:  711697 vs 611057 	 994390 	 54186 c= 383333 rs
1-0:  0100 vs 1010 	 0100 	 1111 c= 0101 correctionV s
1-0:  4 bitGcMinOutVecs[i].size()
1-0:  0101 vs 0101 testV s
1: 0000 vs 1011000001111111 chunk 
1-1:  462873 vs 794674 	 424611 	 585703 c= 678513 rs
1-1:  1110 vs 1110 	 1110 	 1110 c= 0000 correctionV s
1-1:  4 bitGcMinOutVecs[i].size()
1-1:  0000 vs 0000 testV s
1: 0111 vs 1011000001111111 chunk 
1-2:  792185 vs 1002960 	 334802 	 713774 c= 380418 rs
1-2:  0011 vs 1101 	 0011 	 0100 c= 1001 correctionV s
1-2:  4 bitGcMinOutVecs[i].size()
1-2:  1001 vs 1001 testV s
1: 1111 vs 1011000001111111 chunk 
1-3:  586106 vs 230893 	 1002666 	 462470 c= 771773 rs
1-3:  1101 vs 0000 	 1101 	 0010 c= 0010 correctionV s
1-3:  4 bitGcMinOutVecs[i].size()
1-3:  0010 vs 0010 testV s
0-4 mVecIdxMin: 0100111101100110    B
1-4 mVecIdxMin: 1000100101111000    B
p1.mShareMin[0].size()=2
0===================
-151816   diffDistB
0-0:  1010 testV r
0-0:  39251 vs 1 c= 831840 r
0-0:  1011 vs 1 c= 1010 cs 1 correctionV r
0-1:  1111 testV r
0-1:  273607 vs 1 c= 913864 r
0-1:  1111 vs 1 c= 1111 cs 1 correctionV r
0-2:  0111 testV r
0-2:  130472 vs 1 c= 27696 r
0-2:  0000 vs 1 c= 0111 cs 1 correctionV r
0-3:  0001 testV r
0-3:  43915 vs 1 c= 656438 r
0-3:  1000 vs 1 c= 0001 cs 1 correctionV r
1-0:  0101 testV r
1-0:  994390 vs 1 c= 383333 r
1-0:  1111 vs 1 c= 0101 cs 1 correctionV r
1-1:  0000 testV r
1-1:  424611 vs 1 c= 678513 r
1-1:  1110 vs 1 c= 0000 cs 1 correctionV r
1-2:  792185 vs 0 c= 678513 r
1-2:  0011 vs 0 c= 0000 cs 1 correctionV r
1-3:  586106 vs 0 c= 678513 r
1-3:  1101 vs 0 c= 0000 cs 1 correctionV r
0-4 mVecIdxMin: 0101111101000110    A
1-4 mVecIdxMin: 1000101101101000    A
p0.mShareMin[0].size()=2
0===================
-151821   diffDistA
0: slt= 11    B
1===================
332445   diffDistA
0: slt= 01    A
0: final= 1 vs 0 
--------------
1===================
332459   diffDistB
0: slt= 11    B
1111    allBitVecs A
11 vs 11    bitGcMinOutVecs[] A
0: slt= 01    A
0: final= 1 vs 0 
--------------
0101    allBitVecs B
01 vs 01    bitGcMinOutVecs[] B
0: 01011111 vs 0101111101000110 chunk 
0-0:  839851 vs 102585 	 1016140 	 32436 c= 913555 rs
0-0:  11101100 vs 01101100 	 11101100 	 10110011 c= 11011111 correctionV s
0-0:  2 bitGcMinOutVecs[i].size()
0-0:  11011111 vs 11011111 testV s
0: 01000110 vs 0101111101000110 chunk 
0-1:  936114 vs 619602 	 960582 	 87994 c= 340980 rs
0-1:  10010001 vs 01100011 	 10010001 	 11010111 c= 10110100 correctionV s
0-1:  2 bitGcMinOutVecs[i].size()
0-1:  10110100 vs 10110100 testV s
1: 10001011 vs 1000101101101000 chunk 
1-0:  663528 vs 87864 	 775762 	 272814 c= 687898 rs
1-0:  01000010 vs 10101001 	 01000010 	 11001001 c= 01100000 correctionV s
1-0:  2 bitGcMinOutVecs[i].size()
1-0:  01100000 vs 01100000 testV s
1: 01101000 vs 1000101101101000 chunk 
1-1:  846583 vs 677207 	 242686 	 805890 c= 614055 rs
1-1:  00001010 vs 10100100 	 00001010 	 01100010 c= 11000110 correctionV s
1-1:  2 bitGcMinOutVecs[i].size()
1-1:  11000110 vs 11000110 testV s
1111    allBitVecs B
11 vs 11    bitGcMinOutVecs[] B
0-0:  839851 vs 0 c= 0 r
0-0:  11101100 vs 0 c=  cs 1 correctionV r
0-1:  10110100 testV r
0-1:  960582 vs 1 c= 340980 r
0-1:  11010111 vs 1 c= 10110100 cs 1 correctionV r
1-0:  663528 vs 0 c= 340980 r
1-0:  01000010 vs 0 c= 10110100 cs 1 correctionV r
1-1:  11000110 testV r
1-1:  242686 vs 1 c= 614055 r
1-1:  01100010 vs 1 c= 11000110 cs 1 correctionV r
0101    allBitVecs A
01 vs 01    bitGcMinOutVecs[] A
0: 01001111 vs 0100111101100110 chunk 
0-0:  26664 vs 577245 	 202953 	 1021912 c= 674284 rs
0-0:  01001011 vs 10000000 	 01001011 	 00000100 c= 10000100 correctionV s
0-0:  2 bitGcMinOutVecs[i].size()
0-0:  10000100 vs 10000100 testV s
0: 01100110 vs 0100111101100110 chunk 
0-1:  341001 vs 646863 	 316528 	 732048 c= 718241 rs
0-1:  01110010 vs 00000111 	 01110010 	 00010100 c= 00010011 correctionV s
0-1:  2 bitGcMinOutVecs[i].size()
0-1:  00010011 vs 00010011 testV s
1: 10001001 vs 1000100101111000 chunk 
1-0:  412762 vs 875050 	 524998 	 635814 c= 698524 rs
1-0:  01010100 vs 10110100 	 01010100 	 11011101 c= 01101001 correctionV s
1-0:  2 bitGcMinOutVecs[i].size()
1-0:  01101001 vs 01101001 testV s
1: 01111000 vs 1000100101111000 chunk 
1-1:  302331 vs 1027714 	 906212 	 142364 c= 927074 rs
1-1:  10001111 vs 00101010 	 10001111 	 11110111 c= 11011101 correctionV s
1-1:  2 bitGcMinOutVecs[i].size()
1-1:  11011101 vs 11011101 testV s
0-8 mVecIdxMin: 1010011111000011    B
1-8 mVecIdxMin: 0001011010010101    B
p1.mShareMin[0].size()=1 end
0-0:  10000100 testV r
0-0:  202953 vs 1 c= 674284 r
0-0:  00000100 vs 1 c= 10000100 cs 1 correctionV r
0-1:  00010011 testV r
0-1:  316528 vs 1 c= 718241 r
0-1:  00010100 vs 1 c= 00010011 cs 1 correctionV r
1-0:  01101001 testV r
1-0:  524998 vs 1 c= 698524 r
1-0:  11011101 vs 1 c= 01101001 cs 1 correctionV r
1-1:  11011101 testV r
1-1:  906212 vs 1 c= 927074 r
1-1:  11110111 vs 1 c= 11011101 cs 1 correctionV r
0-8 mVecIdxMin: 1011011111000011    A
1-8 mVecIdxMin: 0001010010010101    A
0: min=0 0001000000000000  	 vs 	 41 67 34 0 69 24 78 58 62 64 5 45 81 27 61 91 
1: min=2 0000001000000000  	 vs 	 95 42 27 36 91 4 2 53 92 82 21 16 18 95 47 26 
945fc4905b5338e090cbe826d7b48c64
000000000000000090cbe826d7b48c64
0000000000000000945fc4905b5338e0
